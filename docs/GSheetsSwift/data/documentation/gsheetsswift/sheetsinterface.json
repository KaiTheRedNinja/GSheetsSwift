{
  "abstract" : [
    {
      "text" : "A simplified interface to a Google Sheet, which implements commonly used APIs in ",
      "type" : "text"
    },
    {
      "code" : "GSheetsSwiftAPI",
      "type" : "codeVoice"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/GSheetsSwift\/documentation\/GSheetsSwift"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/GSheetsSwift\/documentation\/GSheetsSwift\/SheetsInterface"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:12GSheetsSwift15SheetsInterfaceC",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "class"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "SheetsInterface"
      }
    ],
    "modules" : [
      {
        "name" : "GSheetsSwift"
      }
    ],
    "navigatorTitle" : [
      {
        "kind" : "identifier",
        "text" : "SheetsInterface"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Class",
    "symbolKind" : "class",
    "title" : "SheetsInterface"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "class"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "SheetsInterface"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "content" : [
        {
          "anchor" : "overview",
          "level" : 2,
          "text" : "Overview",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "This interface is the recommended way to interface with Google Sheets via GSheetsSwift, unless you need",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "more precise control over exactly how commands are called.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "Note that this sheets interface currently assumes that your data is ",
              "type" : "text"
            },
            {
              "inlineContent" : [
                {
                  "text" : "continuous",
                  "type" : "text"
                }
              ],
              "type" : "emphasis"
            },
            {
              "text" : ". That means that if your data",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "has empty rows between populated rows or empty columns between populated columns, it may behave weirdly.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    }
  ],
  "relationshipsSections" : [
    {
      "identifiers" : [
        "doc:\/\/GSheetsSwift\/7Combine16ObservableObjectP"
      ],
      "kind" : "relationships",
      "title" : "Conforms To",
      "type" : "conformsTo"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "topicSections" : [
    {
      "identifiers" : [
        "doc:\/\/GSheetsSwift\/documentation\/GSheetsSwift\/SheetsInterface\/init()"
      ],
      "title" : "Initializers"
    },
    {
      "identifiers" : [
        "doc:\/\/GSheetsSwift\/documentation\/GSheetsSwift\/SheetsInterface\/changeDelegate",
        "doc:\/\/GSheetsSwift\/documentation\/GSheetsSwift\/SheetsInterface\/spreadsheet",
        "doc:\/\/GSheetsSwift\/documentation\/GSheetsSwift\/SheetsInterface\/targetSheet"
      ],
      "title" : "Instance Properties"
    },
    {
      "identifiers" : [
        "doc:\/\/GSheetsSwift\/documentation\/GSheetsSwift\/SheetsInterface\/appendRow(_:updateInternalRepresentation:)",
        "doc:\/\/GSheetsSwift\/documentation\/GSheetsSwift\/SheetsInterface\/focusSheet(name:)",
        "doc:\/\/GSheetsSwift\/documentation\/GSheetsSwift\/SheetsInterface\/insertRange(_:direction:updateInternalRepresentation:)",
        "doc:\/\/GSheetsSwift\/documentation\/GSheetsSwift\/SheetsInterface\/loadSpreadsheet(id:)",
        "doc:\/\/GSheetsSwift\/documentation\/GSheetsSwift\/SheetsInterface\/namesOfSheets()",
        "doc:\/\/GSheetsSwift\/documentation\/GSheetsSwift\/SheetsInterface\/readAll()",
        "doc:\/\/GSheetsSwift\/documentation\/GSheetsSwift\/SheetsInterface\/readCell(row:col:)",
        "doc:\/\/GSheetsSwift\/documentation\/GSheetsSwift\/SheetsInterface\/readColumn(_:startRow:endRow:)",
        "doc:\/\/GSheetsSwift\/documentation\/GSheetsSwift\/SheetsInterface\/readRow(_:startCol:endCol:)",
        "doc:\/\/GSheetsSwift\/documentation\/GSheetsSwift\/SheetsInterface\/reloadSpreadsheet()",
        "doc:\/\/GSheetsSwift\/documentation\/GSheetsSwift\/SheetsInterface\/resetSpreadsheet()",
        "doc:\/\/GSheetsSwift\/documentation\/GSheetsSwift\/SheetsInterface\/update(requests:updateInternalRepresentation:)",
        "doc:\/\/GSheetsSwift\/documentation\/GSheetsSwift\/SheetsInterface\/writeCell(contents:row:col:updateInternalRepresentation:)"
      ],
      "title" : "Instance Methods"
    },
    {
      "identifiers" : [
        "doc:\/\/GSheetsSwift\/documentation\/GSheetsSwift\/SheetsInterface\/accessToken"
      ],
      "title" : "Type Properties"
    },
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/GSheetsSwift\/documentation\/GSheetsSwift\/SheetsInterface\/ObservableObject-Implementations"
      ],
      "title" : "Default Implementations"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/gsheetsswift\/sheetsinterface"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://GSheetsSwift/7Combine16ObservableObjectP": {
  "identifier" : "doc:\/\/GSheetsSwift\/7Combine16ObservableObjectP",
  "title" : "Combine.ObservableObject",
  "type" : "unresolvable"
},
"doc://GSheetsSwift/documentation/GSheetsSwift": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/GSheetsSwift\/documentation\/GSheetsSwift",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "GSheetsSwift",
  "type" : "topic",
  "url" : "\/documentation\/gsheetsswift"
},
"doc://GSheetsSwift/documentation/GSheetsSwift/SheetsInterface": {
  "abstract" : [
    {
      "text" : "A simplified interface to a Google Sheet, which implements commonly used APIs in ",
      "type" : "text"
    },
    {
      "code" : "GSheetsSwiftAPI",
      "type" : "codeVoice"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "SheetsInterface"
    }
  ],
  "identifier" : "doc:\/\/GSheetsSwift\/documentation\/GSheetsSwift\/SheetsInterface",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "SheetsInterface"
    }
  ],
  "role" : "symbol",
  "title" : "SheetsInterface",
  "type" : "topic",
  "url" : "\/documentation\/gsheetsswift\/sheetsinterface"
},
"doc://GSheetsSwift/documentation/GSheetsSwift/SheetsInterface/ObservableObject-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/GSheetsSwift\/documentation\/GSheetsSwift\/SheetsInterface\/ObservableObject-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "ObservableObject Implementations",
  "type" : "topic",
  "url" : "\/documentation\/gsheetsswift\/sheetsinterface\/observableobject-implementations"
},
"doc://GSheetsSwift/documentation/GSheetsSwift/SheetsInterface/accessToken": {
  "abstract" : [
    {
      "text" : "The oauth access token. Wrapper for ",
      "type" : "text"
    },
    {
      "code" : "APICaller.APISecretManager.accessToken",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "static"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "accessToken"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    }
  ],
  "identifier" : "doc:\/\/GSheetsSwift\/documentation\/GSheetsSwift\/SheetsInterface\/accessToken",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "accessToken",
  "type" : "topic",
  "url" : "\/documentation\/gsheetsswift\/sheetsinterface\/accesstoken"
},
"doc://GSheetsSwift/documentation/GSheetsSwift/SheetsInterface/appendRow(_:updateInternalRepresentation:)": {
  "abstract" : [
    {
      "text" : "Appends a row below the last row with data, creating it if nescessary",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "appendRow"
    },
    {
      "kind" : "text",
      "text" : "(["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:17GSheetsSwiftTypes7RowDataV",
      "text" : "RowData"
    },
    {
      "kind" : "text",
      "text" : "], "
    },
    {
      "kind" : "externalParam",
      "text" : "updateInternalRepresentation"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/GSheetsSwift\/documentation\/GSheetsSwift\/SheetsInterface\/appendRow(_:updateInternalRepresentation:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "appendRow(_:updateInternalRepresentation:)",
  "type" : "topic",
  "url" : "\/documentation\/gsheetsswift\/sheetsinterface\/appendrow(_:updateinternalrepresentation:)"
},
"doc://GSheetsSwift/documentation/GSheetsSwift/SheetsInterface/changeDelegate": {
  "abstract" : [
    {
      "text" : "The change delegate, which is informed when any changes are made to the internal representation of the google",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "sheet, by this interface.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "changeDelegate"
    },
    {
      "kind" : "text",
      "text" : ": (any "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12GSheetsSwift29SheetsInterfaceChangeDelegateP",
      "text" : "SheetsInterfaceChangeDelegate"
    },
    {
      "kind" : "text",
      "text" : ")?"
    }
  ],
  "identifier" : "doc:\/\/GSheetsSwift\/documentation\/GSheetsSwift\/SheetsInterface\/changeDelegate",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "changeDelegate",
  "type" : "topic",
  "url" : "\/documentation\/gsheetsswift\/sheetsinterface\/changedelegate"
},
"doc://GSheetsSwift/documentation/GSheetsSwift/SheetsInterface/focusSheet(name:)": {
  "abstract" : [
    {
      "text" : "Focuses a sheet within the spreadsheet with a given name. This sets the ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/GSheetsSwift\/documentation\/GSheetsSwift\/SheetsInterface\/targetSheet",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " property.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "focusSheet"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "name"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/GSheetsSwift\/documentation\/GSheetsSwift\/SheetsInterface\/focusSheet(name:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "focusSheet(name:)",
  "type" : "topic",
  "url" : "\/documentation\/gsheetsswift\/sheetsinterface\/focussheet(name:)"
},
"doc://GSheetsSwift/documentation/GSheetsSwift/SheetsInterface/init()": {
  "abstract" : [
    {
      "text" : "Creates an empty ",
      "type" : "text"
    },
    {
      "code" : "SheetsInterface",
      "type" : "codeVoice"
    }
  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "()"
    }
  ],
  "identifier" : "doc:\/\/GSheetsSwift\/documentation\/GSheetsSwift\/SheetsInterface\/init()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init()",
  "type" : "topic",
  "url" : "\/documentation\/gsheetsswift\/sheetsinterface\/init()"
},
"doc://GSheetsSwift/documentation/GSheetsSwift/SheetsInterface/insertRange(_:direction:updateInternalRepresentation:)": {
  "abstract" : [
    {
      "text" : "Inserts empty rows or columns in a range, pushing data to the right or bottom if needed.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "insertRange"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sn",
      "text" : "Range"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "externalParam",
      "text" : "direction"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:17GSheetsSwiftTypes13DimensionEnumO",
      "text" : "DimensionEnum"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "updateInternalRepresentation"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/GSheetsSwift\/documentation\/GSheetsSwift\/SheetsInterface\/insertRange(_:direction:updateInternalRepresentation:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "insertRange(_:direction:updateInternalRepresentation:)",
  "type" : "topic",
  "url" : "\/documentation\/gsheetsswift\/sheetsinterface\/insertrange(_:direction:updateinternalrepresentation:)"
},
"doc://GSheetsSwift/documentation/GSheetsSwift/SheetsInterface/loadSpreadsheet(id:)": {
  "abstract" : [
    {
      "text" : "Loads the spreadsheet for a given id",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "loadSpreadsheet"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "id"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    }
  ],
  "identifier" : "doc:\/\/GSheetsSwift\/documentation\/GSheetsSwift\/SheetsInterface\/loadSpreadsheet(id:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "loadSpreadsheet(id:)",
  "type" : "topic",
  "url" : "\/documentation\/gsheetsswift\/sheetsinterface\/loadspreadsheet(id:)"
},
"doc://GSheetsSwift/documentation/GSheetsSwift/SheetsInterface/namesOfSheets()": {
  "abstract" : [
    {
      "text" : "Gets the names for sheets",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "namesOfSheets"
    },
    {
      "kind" : "text",
      "text" : "() -> ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "]"
    }
  ],
  "identifier" : "doc:\/\/GSheetsSwift\/documentation\/GSheetsSwift\/SheetsInterface\/namesOfSheets()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "namesOfSheets()",
  "type" : "topic",
  "url" : "\/documentation\/gsheetsswift\/sheetsinterface\/namesofsheets()"
},
"doc://GSheetsSwift/documentation/GSheetsSwift/SheetsInterface/readAll()": {
  "abstract" : [
    {
      "text" : "Reads all contents from a sheet",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "readAll"
    },
    {
      "kind" : "text",
      "text" : "() -> [["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12GSheetsSwift11CellContentV",
      "text" : "CellContent"
    },
    {
      "kind" : "text",
      "text" : "]]"
    }
  ],
  "identifier" : "doc:\/\/GSheetsSwift\/documentation\/GSheetsSwift\/SheetsInterface\/readAll()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "readAll()",
  "type" : "topic",
  "url" : "\/documentation\/gsheetsswift\/sheetsinterface\/readall()"
},
"doc://GSheetsSwift/documentation/GSheetsSwift/SheetsInterface/readCell(row:col:)": {
  "abstract" : [
    {
      "text" : "Reads the contents at a given cell",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "readCell"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "row"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "col"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12GSheetsSwift11CellContentV",
      "text" : "CellContent"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/GSheetsSwift\/documentation\/GSheetsSwift\/SheetsInterface\/readCell(row:col:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "readCell(row:col:)",
  "type" : "topic",
  "url" : "\/documentation\/gsheetsswift\/sheetsinterface\/readcell(row:col:)"
},
"doc://GSheetsSwift/documentation/GSheetsSwift/SheetsInterface/readColumn(_:startRow:endRow:)": {
  "abstract" : [
    {
      "text" : "Returns the contents of the specified column number, starting from startRow and ending before endRow.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "May return less than the specified number of columns.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "readColumn"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "startRow"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : "?, "
    },
    {
      "kind" : "externalParam",
      "text" : "endRow"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : "?) -> ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12GSheetsSwift11CellContentV",
      "text" : "CellContent"
    },
    {
      "kind" : "text",
      "text" : "]"
    }
  ],
  "identifier" : "doc:\/\/GSheetsSwift\/documentation\/GSheetsSwift\/SheetsInterface\/readColumn(_:startRow:endRow:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "readColumn(_:startRow:endRow:)",
  "type" : "topic",
  "url" : "\/documentation\/gsheetsswift\/sheetsinterface\/readcolumn(_:startrow:endrow:)"
},
"doc://GSheetsSwift/documentation/GSheetsSwift/SheetsInterface/readRow(_:startCol:endCol:)": {
  "abstract" : [
    {
      "text" : "Returns the contents of the specified row number, starting from startCol and ending before endCol.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "May return less than the specified number of rows.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "readRow"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "startCol"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : "?, "
    },
    {
      "kind" : "externalParam",
      "text" : "endCol"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : "?) -> ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12GSheetsSwift11CellContentV",
      "text" : "CellContent"
    },
    {
      "kind" : "text",
      "text" : "]"
    }
  ],
  "identifier" : "doc:\/\/GSheetsSwift\/documentation\/GSheetsSwift\/SheetsInterface\/readRow(_:startCol:endCol:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "readRow(_:startCol:endCol:)",
  "type" : "topic",
  "url" : "\/documentation\/gsheetsswift\/sheetsinterface\/readrow(_:startcol:endcol:)"
},
"doc://GSheetsSwift/documentation/GSheetsSwift/SheetsInterface/reloadSpreadsheet()": {
  "abstract" : [
    {
      "text" : "Reloads the spreadsheet, similar to re-running ",
      "type" : "text"
    },
    {
      "code" : "loadSpreadsheet",
      "type" : "codeVoice"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "reloadSpreadsheet"
    },
    {
      "kind" : "text",
      "text" : "() "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    }
  ],
  "identifier" : "doc:\/\/GSheetsSwift\/documentation\/GSheetsSwift\/SheetsInterface\/reloadSpreadsheet()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "reloadSpreadsheet()",
  "type" : "topic",
  "url" : "\/documentation\/gsheetsswift\/sheetsinterface\/reloadspreadsheet()"
},
"doc://GSheetsSwift/documentation/GSheetsSwift/SheetsInterface/resetSpreadsheet()": {
  "abstract" : [
    {
      "text" : "Deletes all the sheet data in this ",
      "type" : "text"
    },
    {
      "code" : "SheetsInterface",
      "type" : "codeVoice"
    },
    {
      "text" : " instance",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "resetSpreadsheet"
    },
    {
      "kind" : "text",
      "text" : "()"
    }
  ],
  "identifier" : "doc:\/\/GSheetsSwift\/documentation\/GSheetsSwift\/SheetsInterface\/resetSpreadsheet()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "resetSpreadsheet()",
  "type" : "topic",
  "url" : "\/documentation\/gsheetsswift\/sheetsinterface\/resetspreadsheet()"
},
"doc://GSheetsSwift/documentation/GSheetsSwift/SheetsInterface/spreadsheet": {
  "abstract" : [
    {
      "text" : "The current spreadsheet loaded into the interface",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "spreadsheet"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:17GSheetsSwiftTypes11SpreadsheetV",
      "text" : "Spreadsheet"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/GSheetsSwift\/documentation\/GSheetsSwift\/SheetsInterface\/spreadsheet",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "spreadsheet",
  "type" : "topic",
  "url" : "\/documentation\/gsheetsswift\/sheetsinterface\/spreadsheet"
},
"doc://GSheetsSwift/documentation/GSheetsSwift/SheetsInterface/targetSheet": {
  "abstract" : [
    {
      "text" : "The current sheet within the spreadsheet that the interface is performing read\/write operations on",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "targetSheet"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:17GSheetsSwiftTypes5SheetV",
      "text" : "Sheet"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/GSheetsSwift\/documentation\/GSheetsSwift\/SheetsInterface\/targetSheet",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "targetSheet",
  "type" : "topic",
  "url" : "\/documentation\/gsheetsswift\/sheetsinterface\/targetsheet"
},
"doc://GSheetsSwift/documentation/GSheetsSwift/SheetsInterface/update(requests:updateInternalRepresentation:)": {
  "abstract" : [
    {
      "text" : "Batch-sends update requests. Usually used to send multiple requests at the same time, instead of",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "individually.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "update"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "requests"
    },
    {
      "kind" : "text",
      "text" : ": ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15GSheetsSwiftAPI13UpdateRequestV",
      "text" : "UpdateRequest"
    },
    {
      "kind" : "text",
      "text" : "], "
    },
    {
      "kind" : "externalParam",
      "text" : "updateInternalRepresentation"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/GSheetsSwift\/documentation\/GSheetsSwift\/SheetsInterface\/update(requests:updateInternalRepresentation:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "update(requests:updateInternalRepresentation:)",
  "type" : "topic",
  "url" : "\/documentation\/gsheetsswift\/sheetsinterface\/update(requests:updateinternalrepresentation:)"
},
"doc://GSheetsSwift/documentation/GSheetsSwift/SheetsInterface/writeCell(contents:row:col:updateInternalRepresentation:)": {
  "abstract" : [
    {
      "text" : "Writes the contents at the specified cell",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "writeCell"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "contents"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "row"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "col"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "updateInternalRepresentation"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/GSheetsSwift\/documentation\/GSheetsSwift\/SheetsInterface\/writeCell(contents:row:col:updateInternalRepresentation:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "writeCell(contents:row:col:updateInternalRepresentation:)",
  "type" : "topic",
  "url" : "\/documentation\/gsheetsswift\/sheetsinterface\/writecell(contents:row:col:updateinternalrepresentation:)"
}
}
}